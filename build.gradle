buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("com.dipien:semantic-version-gradle-plugin:1.3.1")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'maven-publish'
	id "org.sonarqube" version "3.4.0.2513"
}

jar {
	enabled = false
}

version = "0.2.0"
apply plugin: 'com.dipien.semantic-version'
apply plugin: 'java'

group = 'com.pisproject'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.apache.pdfbox:pdfbox:2.0.27'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-solr:2.4.13'
	implementation 'org.mongodb:mongodb-driver-sync:4.7.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.commons:commons-io:1.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'commons-io:commons-io:2.11.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	exclude '**/integration'
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

task integration(type: Test) {
	outputs.dir snippetsDir
	useJUnitPlatform{
		exclude '**/unit'
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId = 'gtm'
			version = project.hasProperty('release') ? version.substring(0, version.length() - 9) : version
			from components.java
		}
	}
	repositories {
		maven {
			def snapshotsRepoUrl = 'http://localhost:8081/repository/maven-snapshots/'
			def releaseRepoUrl = 'http://localhost:8081/repository/maven-releases/'
			url = project.hasProperty('release') ? releaseRepoUrl : snapshotsRepoUrl
			allowInsecureProtocol = true
			credentials{
				username "admin"
				password "jDbT629@"
			}
		}
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "pisproject"
	}
}
